#!/bin/bash

if [ "$EUID" -ne 0 ]; then
    echo "This script must be run as root or with sudo"
    exit 1
fi

BRANCH=${GIT_BRANCH:-${1:-main}}
REPO_URL="https://github.com/Ogglord/openwrt-builder.git"
TMP_DIR=$(mktemp -d)
REPO_DIR="$TMP_DIR/update"

trap 'rm -rf "$TMP_DIR"' EXIT

if ! command -v jq >/dev/null 2>&1; then
    echo "Error: jq is required but not installed"
    exit 1
fi

validate_json() {
    if jq empty "$1" 2>/dev/null; then
        return 0
    else
        return 1
    fi
}

echo "Cloning repository from $BRANCH branch..."
if ! git clone --depth 1 --branch "$BRANCH" "$REPO_URL" "$REPO_DIR"; then
    echo "Failed to clone repository"
    exit 1
fi

MANIFEST_GIT="$REPO_DIR/update-manifest.json"
MANIFEST_LOCAL="/update-manifest.json"

if [ ! -f "$MANIFEST_GIT" ]; then
    echo "No manifest in repository"
    if [ -f "$MANIFEST_LOCAL" ]; then
        echo "Falling back to local manifest..."
        cp "$MANIFEST_LOCAL" "$MANIFEST_GIT"
    else
        echo "No manifest found"
        exit 1
    fi
fi

echo "Processing updates from manifest..."
jq -c '.files[]' "$MANIFEST_GIT" | while read -r file; do
    source=$(echo "$file" | jq -r '.source')
    target=$(echo "$file" | jq -r '.target')
    is_executable=$(echo "$file" | jq -r '.executable')
    
    echo "Processing $source..."
    
    # Create target directory if it doesn't exist
    target_dir=$(dirname "$target")
    mkdir -p "$target_dir"
    
    # Copy from local repo
    cp -f "$REPO_DIR/$source" "$target"
    
    if [ "$is_executable" = "true" ]; then
        chmod +x "$target"
    fi
    
    echo "Installed $source to $target"
done

echo "All files have been updated"